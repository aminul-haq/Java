
int p = 1, s = 1, e = n;

segTree = new int[4*n];

static void update(int p, int s, int e, int pos, int val){
    if(s == pos && e == pos){
      seg[p] = val;
      return;
    }
    if(s > pos || e < pos || s > e || e < s) return;
    
    int m = (s+e)/2, l = 2*p, r = 2*p + 1; 
    
    update(l, s, m, pos, val);
    update(r, m+1, e, pos, val);
    
    seg[p] = Math.max(seg[l], seg[r]);
  }
  
  
  static int query(int p, int s, int e, int a, int b){
    if(s >= a && e <= b){
      return seg[p];
    }
    if(s > b || e < a || s > e || e < s) return Integer.MIN_VALUE;
    
    int m = (s+e)/2, l = 2*p, r = 2*p + 1; 
    
    int q1 = query(l, s, m, a, b);
    int q2 = query(r, m+1, e, a, b);
    
    return Math.max(q1, q2);
  }